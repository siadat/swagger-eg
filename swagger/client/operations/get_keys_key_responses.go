package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetKeysKeyReader is a Reader for the GetKeysKey structure.
type GetKeysKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKeysKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetKeysKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetKeysKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetKeysKeyOK creates a GetKeysKeyOK with default headers values
func NewGetKeysKeyOK() *GetKeysKeyOK {
	return &GetKeysKeyOK{}
}

/*GetKeysKeyOK handles this case with default header values.

Successful response
*/
type GetKeysKeyOK struct {
}

func (o *GetKeysKeyOK) Error() string {
	return fmt.Sprintf("[GET /keys/{key}][%d] getKeysKeyOK ", 200)
}

func (o *GetKeysKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKeysKeyNotFound creates a GetKeysKeyNotFound with default headers values
func NewGetKeysKeyNotFound() *GetKeysKeyNotFound {
	return &GetKeysKeyNotFound{}
}

/*GetKeysKeyNotFound handles this case with default header values.

Not found.
*/
type GetKeysKeyNotFound struct {
}

func (o *GetKeysKeyNotFound) Error() string {
	return fmt.Sprintf("[GET /keys/{key}][%d] getKeysKeyNotFound ", 404)
}

func (o *GetKeysKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
